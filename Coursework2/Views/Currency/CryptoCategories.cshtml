@model CryptoCurrencyCategoryList
@using System.Globalization;
@{
    CultureInfo cultureInfo = new CultureInfo("en-US");
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <div class="container">
        <h3>Cryptocurrency Sectors by 24h Price Change</h3>
        <p class="text-dark">We have created an index for each cryptocurrency category. Categories are ranked by 24h price change. Click on a crypto category name to see the constituent parts of the index and their recent price performance.</p>
    </div>
    <div class="table-responsive">
        <table id="cryptoTable" class="table custom-table">
            <!-- Заголовок таблиці -->
            <thead>
                <tr>
                    <th class="fixed-column">#</th>
                    <th class="fixed-column">Name</th>
                    <th>Number of Tokens</th>
                    <th>Avg.Price Change</th>
                    <th>Market Cap</th>
                    <th>Volume(24h)</th>


                </tr>
            </thead>
            <!-- Тіло таблиці -->
            <tbody id="cryptoTableBody">
                @foreach (var crypto in Model.data)
                {
                    <tr data-id="@crypto.id" class="table-row">
                        <td class="row-number"></td>
                        <td class="fixed-column"><b>@crypto.name</b></td>
                        <td>@crypto.num_tokens</td>
                        <td class="@((crypto.avg_price_change > 0) ? "positive" : (crypto.avg_price_change < 0) ? "negative" : "neutral")">
                            @if (crypto.avg_price_change.HasValue)
                                @crypto.avg_price_change.Value.ToString("N2")
                        </td>
                            <td style=" color: blue;">
                                @string.Format(cultureInfo, "{0:C0}", @crypto.market_cap) <br /> <p class="@((crypto.market_cap_change > 0) ? "positive" : (crypto.market_cap_change < 0) ? "negative" : "neutral")">
                                    @if (crypto.market_cap_change.HasValue)
                                        @crypto.market_cap_change.Value.ToString("N2")%
                                </p>
                            </td>
                            <td>
                                @string.Format(cultureInfo,"{0:C0}",@Math.Round(crypto.volume))<br /> <p class="@((crypto.volume_change > 0) ? "positive" : (crypto.volume_change < 0) ? "negative" : "neutral")">
                                    @if (crypto.volume_change.HasValue)
                                        @crypto.volume_change.Value.ToString("N2")%
                                </p>
                            </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>
<script>
    $(document).ready(function () {
        // Встановлюємо номери рядків при завантаженні сторінки
        setRowNumbers();

        // Функція для встановлення номерів рядків
        function setRowNumbers() {
            $("#cryptoTableBody .table-row").each(function (index) {
                var rowNumber = index + 1;
                $(this).find(".row-number").text(rowNumber);
            });
        }
    });
</script>
